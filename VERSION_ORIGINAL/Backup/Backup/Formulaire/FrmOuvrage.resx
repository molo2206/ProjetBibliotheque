<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA9ZJREFUaEPt
        mFuITHEcx3fd1RbKLbcHD0tpJRQilAhJFEpRFEptKZfIy15md3ZbDO3bvskTU8gLJS8KD1q5FJvLusWy
        WLmt6+7y+e3+/tNvz5rdOe3MmaXzrU8z87ufmfP/nzknJ1SoUKFC/XcqLi4eApPKysomyns1/xsqLS0t
        YOjD8Bh+e6iHKmKmaXjfEwOOhRPQCt4D8CIxx8vLy8doet8QQ82GFzqkH57DTC2TXTHIdPisgzmul5SU
        bOd1AgxQJqitFmzsx6yfahUVFSMY5IkZ6jvDblZ3MuUSs1ViTV59ZWXlMPUHLwaoMsP8hGXq6lHELodf
        mitE1RWsaDwavplB9qorZZFz0OQ3w0h1BSeabjNDPK+urh6srpRFnlxn7CaxRV3BiaZnzACH1exb5MZM
        nbiagxNNb5oB1qjZt1j4a02dG2oOTjR95QZg+5yjZt8if66rAw1qDk40feQG4FtdombfInepqwMP1Byc
        aHrFDcAwO9XsW+QXujpwWc3BiaZ2kV5Qs2+Re9HUOaTm4ETTBWaANtbJPHWlLHLmmxqy1nzX6LVo3A/s
        zlUbi8WGqrtHEZ8Ht20+9FN3sJJFbgYRzkGeupNK/lcRd8nkyS+6SN3ZEUMcMgMJ9zjAFeruIvwr4b6J
        F7LzP8sqHo/3Z5DTnsFkJ2vgVb71syB++bXk/qNTHJyC7JxSXskgILtYG3gHTUYrB1tFem5HlSxL/iwy
        0B4Ge+8ZNBWaYDcM0nLZEQPI3WHiCu/hBzRxkK8F3suBiu1vsQ9Z7AVaNljRfDV4b3Hl5kpOsYUwQEMT
        qqmpGSi7U1FR0VH89qZK+ASrNDQY0XADJHtaclVugTW0i/T2+Jonx9EC6zQ0s6LRYrCniJw2581noU4e
        ymlKQvqgrs4TK7mN5vO3jF/h9duUbdU1bYxEIlNw5fJeThdnF55Cfkdm+xeQD8/U54jhktyp8MbYX8Lw
        jswMiOJHTLMv0OmZFIt6v/EL8mvNUOR9wiexmtYufoVZ2OW+3cXI1px+UVieUX01jXarq5OwHwB7PXkL
        78znNu9BOHm+iGZOxfHqSp8oHDVNnnb3sAH/DpCF6+IdLQy7XcO6SP50EmOv/hF1pU8UvWsaFKo5qRh4
        PXF2U5AHcj3uSOTtMjl31JweUVAWoyvemurDZ2LlevJBWajmbkXcOEicmrqZpEcU3OQKg68nHSziOYJ+
        TEn0uOX68QttVHPv5VmEJ9WcMdEj7vrRe5+aey8KHnOF4aiaMyZPP7nWpEfRaHQUBScL3f39SJf0wtve
        T3qrOVSoUKFC9TXl5PwBnSEmVPP3zUgAAAAASUVORK5CYII=
</value>
  </data>
</root>